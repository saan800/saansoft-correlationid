name: dotnet-build-and-package

on:
  workflow_call:
    inputs:
      os:
        required: false
        type: string
        default: ubuntu-latest
      dotnet-version:
        required: true
        type: string
      package-version:
        required: true
        type: string
      add-assembly-version:
        description: "Should only include assembly version on main branch"
        required: true
        type: boolean

permissions:
  contents: read

jobs:
  dotnet-build-and-package:
    runs-on: ${{ inputs.os }}

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0d381219ddf674d61a7572ddd19d7941e271515c # v2.9.0
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      # Cache .NET dependencies
      - name: Cache .NET packages
        uses: actions/cache@ab5e6d0c87105b4c9c2047343972218f562e4319 # 4.0.2
        with:
          path: ~/.nuget/packages # Path to the NuGet package cache
          key: ${{ inputs.os }}-${{ inputs.dotnet-version }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ inputs.os }}-${{ inputs.dotnet-version }}-nuget-

      - name: Install .NET Core ${{ inputs.dotnet-version }}
        uses: actions/setup-dotnet@6bd8b7f7774af54e05809fcc5431931b3eb1ddee # v4.0.1
        with:
          dotnet-version: ${{ inputs.dotnet-version }}

      - name: Restore packages
        run: dotnet restore

      # Only include assembly version on main branch
      - name: Package with assembly number
        if: ${{ inputs.add-assembly-version }}
        run: >
          dotnet pack
          --no-restore
          --configuration Release
          --output build-pacakges
          /p:Version=${{ inputs.package-version }}
          /p:FileVersion=${{ inputs.package-version }}
          /p:AssemblyVersion=${{ inputs.package-version }}
          /p:AssemblyInformationalVersion=${{ inputs.package-version }}

      # Packaging step for non-main branches (without AssemblyVersion)
      - name: Package without assembly number
        if: ${{ !inputs.add-assembly-version }}
        run: >
          dotnet pack
          --no-restore
          --configuration Release
          --output build-pacakges
          /p:Version=${{ inputs.package-version }}

      - name: Upload artifacts
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: pacakges
          path: build-pacakges/*.nupkg
          if-no-files-found: error
