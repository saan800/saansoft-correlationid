name: ci

on:
  pull_request:
  push:
    branches:
      - main
    paths:
      - "src/**"

permissions:
  contents: read

jobs:
  matrix:
    runs-on: ubuntu-latest
    outputs:
      os_array: ${{ steps.generate-matrix.outputs.os_array }}

    env:
      OS_LIST: "ubuntu-latest,windows-latest"

    steps:
      - name: Generate Matrix os
        id: generate-matrix
        run: |
          IFS=',' read -a os_list_temp <<< "${{ env.OS_LIST }}"
          echo "OS_LIST_NEW=${os_list_temp[@]}" >> $GITHUB_ENV

          $testBro = ${{ env.OS_LIST }}
          echo ::set-output name=os_array::"[\"${testBro//','/\",\"}\"]"

      # echo "os_array=[\"${testBro//','/\",\"}\"]" >> $GITHUB_OUTPUT
      # SERVICES='${{ toJSON(env.OS_LIST_NEW) }}'
      # - name: Set env
      #   run: echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV
      - name: Test
        run: |
          echo "OS_LIST_NEW=${{ env.OS_LIST_NEW }}"
          echo "os_array=${{ steps.generate-matrix.outputs.os_array }}"

  build-and-test:
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "windows-latest"]
        dotnet-version: ["6.0.x", "7.0.x", "8.0.x"]

    permissions:
      contents: read
      checks: write

    uses: ./.github/workflows/_dotnet-build-and-test.yml
    with:
      os: ${{ matrix.os }}
      dotnet-version: ${{ matrix.dotnet-version }}
      codecov-slug: "saan800/saansoft-correlationId"
    secrets:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  version:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Get next version
        uses: reecetech/version-increment@dee3ec8905aa206545f928256a2cc2125c5fb2f5 # 2024.4.3
        id: version
        with:
          scheme: conventional_commits
          increment: patch

      - name: display current version
        run: echo "${{ steps.version.outputs.current-version }}"

      - name: display new version
        run: echo "${{ steps.version.outputs.version }}"

      # - name: Set outputs
      #   id: set_outputs
      #   run: echo "::set-output name=version::${{ steps.version.outputs.version }}"
